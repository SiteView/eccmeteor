Date.prototype.format = function(format){  var o = {    "M+" : (this.getMonth()+1), //month     "d+" : this.getDate(),    //day     "h+" : this.getHours(),   //hour     "m+" : this.getMinutes(), //minute     "s+" : this.getSeconds(), //second     "q+" : Math.floor((this.getMonth()+3)/3),  //quarter     "S" : this.getMilliseconds() //millisecond   }   if(/(y+)/.test(format)) format=format.replace(RegExp.$1,     (this.getFullYear()+"").substr(4 - RegExp.$1.length));   for(var k in o)if(new RegExp("("+ k +")").test(format))     format = format.replace(RegExp.$1,       RegExp.$1.length==1 ? o[k] :         ("00"+ o[k]).substr((""+ o[k]).length));   return format; }var Logger = {    setting:{      method4Server:"log2txt",//设置默认服务端的日志记录方式      method4Client:"log2Console",//设置客户端控制台打印格式      logRate:true  //日志是否分级显示 默认为false    },    client:{      log2Console:function(text,level){        console.log(Logger.getHeader(level));        console.log(text);      }    },    server:{      /*      *设置日志存储位置      */      getLogPath:function(){        var cwd = process.cwd();        cwd = cwd.substr(0,cwd.indexOf(".meteor"));        return cwd+"log/";      },      getLogFileName:function(level){        var filename = new Date().format("yyyy-MM-dd hh:mm");        return Logger.setting.logRate                 ? filename+"_"+Logger.getLevel(level)+".log"                : filename+".log"      },      /*      *输出日志到.log文件      */      log2txt:function(text,level){        var fs = EccSystem.require('fs');        text = JSON.stringify(text).replace(/\\\"/g,"\'")        var fullpath =  Logger.server.getLogPath()+Logger.server.getLogFileName(level);        var context = Logger.getHeader(level)+text+"\n";        fs.appendFile(fullpath,context, function (err) {            if (err) throw err;        });      },      /*      *输出日志到终端      */      log2terminal:function(text,level){        text = JSON.stringify(text).replace(/\\\"/g,"\'")        var context = Logger.getHeader(level)+text;        console.log(context);      },    },    /*    *获取日志级别    */    getLevel : function(level){        var levelInfo = "";        switch(level){            case -1:levelInfo = "ERROR";break;            case 0 :levelInfo = "WARNNING";break;            default:levelInfo = "NORMAL";break;        }        return levelInfo;    },    /*    *设置日志信息每行开始部分的资料    */    getHeader : function(level){      if(typeof level === "undefined" || typeof level !== "number")          level = 1;      var date = new Date().format("yyyy-MM-dd hh:mm:ss");      var levelInfo = Logger.getLevel(level);      return (date + "  " + levelInfo + ":")    },    /*    * 方便开发调试，指定调用的方法名    */    getServerMethod:function(method){      return method ? method : Logger.setting.method4Server;    },    getClientMethod:function(){      return Logger.setting.method4Client;    },    /*    *公开服务端调用方法    */    print4Sever:function(text,level,method){      Logger.server[Logger.getServerMethod(method)](text,level);    },    /*    *公开客户端调用方法    */    print4Client:function(text,level){      Logger.client[Logger.getClientMethod()](text,level);    }}//debug级别 ：level，-1表示错误，0表示警告，1表示一般提示信息  默认为1SystemLogger = function(obj,level){  if(Meteor.isClient){    Logger.print4Client(obj,level);  }else if(Meteor.isServer){    Logger.print4Sever(obj,level,"log2terminal");//  }}