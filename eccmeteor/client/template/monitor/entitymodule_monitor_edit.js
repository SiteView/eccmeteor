Template.EditMoniorFormModal.events({	"submit form":function(){		return false;	},	"click #monityTemplateFormsSavelBtn":function(e,t){		var monitorTemplateId = t.find("input:text").value;		var monityTemplateParameter = ClientUtils.formArrayToObject($("#monityTemplateParameter").serializeArray());	//	var monityTemplateStates = ClientUtils.formArrayToObject($("#monityTemplateStates").serializeArray());		var monityTemplateAdvanceParameters = ClientUtils.formArrayToObject($("#monityTemplateAdvanceParameters").serializeArray());		var monityCommonParameters = ClientUtils.formArrayToObject($("#monityTemplateCommonParameters").serializeArray());		monityCommonParameters["sv_checkerr"] = monityCommonParameters["sv_checkerr"] || "false";		var checkedMonityTemolateProperty = SvseMonitorTemplateDao.getTemplateById(monitorTemplateId)["property"];//模板属性		var monityParameter = ClientUtils.objectCoalescence(monityTemplateParameter,monityCommonParameters);		//拼接基本参数属性		if(!monityParameter["sv_errfreqsave"]){			monityParameter["sv_errfreqsave"] = "";			monityParameter["sv_errfreq"] = 0;		}		if(monityParameter["sv_errfreqsave"] !== ""){			monityParameter["sv_errfreq"] = +monityParameter["sv_errfreqsave"];		}		monityParameter["_frequency"] = +monityParameter["_frequency"];		monityParameter["_frequency1"] = monityParameter["_frequency"]		var error =  ClientUtils.statusFormToObj($("#errorsStatusForm").serializeArray());		var good =  ClientUtils.statusFormToObj($("#goodStatusForm").serializeArray());		var warning =  ClientUtils.statusFormToObj($("#warningStatusForm").serializeArray());		var property = {			sv_disable : false,			sv_endtime : "",			sv_monitortype : checkedMonityTemolateProperty.sv_id,			sv_name : checkedMonityTemolateProperty.sv_name,			sv_starttime : "",			creat_timeb : new Date().format("yyyy-MM-dd hh:mm:ss")		};		//组装监视器数据		var monitor = {			advance_parameter : monityTemplateAdvanceParameters,			error : error,			warning : warning,			good : good,			parameter : monityParameter,			property : property		};		//获取父节点id		var parentid = SessionManage.getCheckedTreeNode("id");		var monitorId = t.find("input:hidden#monitorId").value;		monitor["return"] = {id : monitorId,return : true};		Log4js.info("获取到的结果是:");		console.log(monitor);		return;		LoadingModal.loading();		SvseMonitorDao.editMonitor(monitor,parentid,function(result){			LoadingModal.loaded();			if(result && !result.status){				Message.error(result.msg);			}			RenderTemplate.hideParents(t);		});	},	"click #monityTemplateFormsCancelBtn":function(e,t){		RenderTemplate.hideParents(t);	},	"click i.icon-trash":function(e){		var i = $(e.currentTarget); //转Jquery对象		if(i.parents("table").find("tr").length === 1){			console.log("none tr");			return;		}		i.closest("table").children("tbody:first").find(":checkbox").each(function(){			if(!this.checked)				return;			var tr = $(this).closest("tr");			var id = tr.attr("id").substr(2);			tr.closest("div[id]").find("form[id]:first :hidden").each(function(){				var name = $(this).attr("name");				if(name.indexOf(id) == -1)					return;				var reg=eval("/"+id+"/");				if(!$(this).attr("name").replace(reg,"").match(/\d+/g))					$(this).remove();			});			tr.remove();		});		i.parent().children(":checkbox")[0].checked = false;		//div 内容更新		var condition = "";		i.parents("table").find("tr").each(function(j){			var oneCon = "[ "			$(this).children("td").each(function(i){				if(i == 0) return;				if(i == 4){					oneCon = oneCon + " ] "+ $(this).text();					return ;				}				oneCon = oneCon + " " +$(this).text();			});			condition = condition + " " +oneCon;		});		condition = condition.replace(/^ \[ $/,"无条件限制")								.replace(/\[  \[/g,"\[")								.replace(/(or|and)$/,"")								.replace(/\b(or|and)\b/g,function($0){return {or:"或",de:"与"}[$0]});		i.parents(".accordion-group")			.find(".MonitorStatusConditionsDiv")			.text(condition);		//condition.replace(/\[  \[/g,"\[").replace(/(or|and)$/,"").replace(/^ \[ $/,"无条件限制")	},	"click button.statusmodaldiv":function(e){	//	$(e.currentTarget).parent().parent(".row-fluid").siblings(".modal").modal('show');		//console.log(div);	}});Template.EditMoniorFormModal.rendered = function(){	}