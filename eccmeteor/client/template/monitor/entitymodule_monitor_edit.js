Template.EditMoniorFormModal.events({	"submit form":function(){		return false;	},	"click #monityTemplateFormsSavelBtn":function(e,t){		var monitorTemplateId = t.find("input:text").value;		var monityTemplateParameter = ClientUtils.formArrayToObject($(t.find("form#monityTemplateParameter")).serializeArray());	//	var monityTemplateStates = ClientUtils.formArrayToObject($("#monityTemplateStates").serializeArray());		var monityTemplateAdvanceParameters = ClientUtils.formArrayToObject($(t.find("form#monityTemplateAdvanceParameters")).serializeArray());		var monityCommonParameters = ClientUtils.formArrayToObject($(t.find("form#monityTemplateCommonParameters")).serializeArray());		monityCommonParameters["sv_checkerr"] = monityCommonParameters["sv_checkerr"] || "false";	//	var checkedMonityTemolateProperty = SvseMonitorTemplateDao.getTemplateById(monitorTemplateId)["property"];//模板属性				var checkedMonityTemolateProperty = ClientUtils.formArrayToObject($(t.find("form#CommonProperty")).serializeArray());		var monityParameter = ClientUtils.objectCoalescence(monityTemplateParameter,monityCommonParameters);		//拼接基本参数属性		if(!monityParameter["sv_errfreqsave"]){			monityParameter["sv_errfreqsave"] = "";			monityParameter["sv_errfreq"] = 0;		}		if(monityParameter["sv_errfreqsave"] !== ""){			monityParameter["sv_errfreq"] = +monityParameter["sv_errfreqsave"];		}		monityParameter["_frequency"] = +monityParameter["_frequency"];		monityParameter["_frequency1"] = monityParameter["_frequency"]		var error =  ClientUtils.statusFormToObj($(t.find("form#errorsStatusForm")).serializeArray());		var good =  ClientUtils.statusFormToObj($(t.find("form#goodStatusForm")).serializeArray());		var warning =  ClientUtils.statusFormToObj($(t.find("form#warningStatusForm")).serializeArray());		var property = {			sv_disable : checkedMonityTemolateProperty.sv_disable == "true" ? true : false,			sv_endtime : checkedMonityTemolateProperty.sv_entime,			sv_monitortype : checkedMonityTemolateProperty.sv_monitortype,			sv_name : checkedMonityTemolateProperty.sv_name,			sv_starttime : checkedMonityTemolateProperty.sv_starttime,			creat_timeb :checkedMonityTemolateProperty.creat_timeb		};		//组装监视器数据		var monitor = {			advance_parameter : monityTemplateAdvanceParameters,			error : error,			warning : warning,			good : good,			parameter : monityParameter,			property : property		};		//获取父节点id		var parentid = SessionManage.getCheckedTreeNode("id");		var monitorId = t.find("input:hidden#monitorId").value;		monitor["return"] = {id : monitorId,return : true};		Log4js.info("获取到的结果是:");		console.log(monitor);		return;		LoadingModal.loading();		SvseMonitorDao.editMonitor(monitor,parentid,function(result){			LoadingModal.loaded();			if(result && !result.status){				Message.error(result.msg);			}			RenderTemplate.hideParents(t);		});	},	"click #monityTemplateFormsCancelBtn":function(e,t){		RenderTemplate.hideParents(t);	},	"click i.icon-trash":function(e){			},	"click button.statusmodaldiv":function(e){	},	"click .modal-header button.close":function(e,t){		RenderTemplate.hideParents(t);	}});Template.EditMoniorFormModal.AllTaskNames = function(){	return SvseTaskDao.getAllTaskNames();}Template.EditMoniorFormModal.rendered = function(){	}Template.monitorTemplateStatusEdit.events({	//添加报警条件	"click button":function(e,t){ 		EntityModuleMonitorEditDomAction.addStatusConditions(e,t);	}});