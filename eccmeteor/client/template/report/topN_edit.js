Template.topNofedit.events({        "click #topNofaddcancelbtnedit":function(e,t){			RenderTemplate.hideParents(t);         },        "click #topNofaddsavebtnedit":function(e,t){			    var topNofaddfromedit = ClientUtils.formArrayToObject($("#topNofaddfromedit").serializeArray());			    console.log("form:"+topNofaddfromedit);			   			    //E-mail的判断				var email=topNofaddfromedit["EmailSend"];								if(!email){					Message.info("E-mail不能为空！",{align:"center",time:3});					 //alert("邮件中必须包含@");					return;				 }				//判断邮箱格式是否正确  				var mailStr =  'aa@bb.com;bb@aa.com;cc@aa.com';				var mail_arr =mailStr.split(";");				 //if(!/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/.test(email))      {  				if(!/^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*([,;][,;\s]*(\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*)*)*$/.test(email))      {   		             Message.info("E-mail格式错误!",{align:"center",time:3});   		             return false;				}				/*var targets = [];                var arr = $.fn.zTree.getZTreeObj("svse_tree_check_topNedit").getNodesByFilter(function(node){return (node.checked && node.type === "monitor")});                for(index in arr){                        targets.push(arr[index].id);                }                topNofaddfromedit["AlertTarget"] = targets.join();                if(!topNofaddfromedit["AlertTarget"]){                        Message.info("监测范围不能为空");                        return;                }*/				var nIndex = topNofaddfromedit["nIndex"];				var address = {};				    address[nIndex] = topNofaddfromedit;				    console.log("nIndex:"+nIndex);				    SvseTopNDao.updateTopN(nIndex,address,function(result){					RenderTemplate.hideParents(t);					  });					}		});Template.topNofedit.rendered = function(){//树	$(function(){		var data = SvseDao.getDetailTree();		var setting = {			check:{				enable: true,				chkStyle: "checkbox",				chkboxType: { "Y": "ps", "N": "ps" }			},			data: {				simpleData: {					enable: true,					idKey: "id",					pIdKey: "pId",					rootPId: "0",				}			}		};		$.fn.zTree.init($("#svse_tree_check_topNedit"), setting, data);		var nIndex = $("#gettopNId").val();						console.log("nIndex:"+nIndex);		var result = SvseTopNDao.getTopNresult(nIndex);	    var displayNodes = result.AlertTarget.split("\,");			console.log(displayNodes);		if(displayNodes && displayNodes.length){				var treeObj = $.fn.zTree.getZTreeObj("svse_tree_check_topNedit");				//节点勾选				for(var index  = 0; index < displayNodes.length ; index++){						if(displayNodes[index] == "") continue;						treeObj.checkNode(treeObj.getNodesByFilter(function(node){								return  node.id  === displayNodes[index];						},true),true);				}		} 				});var svsedata = SvseTree.find().fetch();		var monitorIds = []; 		for(i in svsedata){			if(svsedata[i]["type"] == "monitor"){				monitorIds.push(svsedata[i]["sv_id"]);			}		}		console.log(monitorIds);				SvseMonitorTemplateDao.getMonitorInfoByIdAsync(monitorIds,function(result){			var context = result.context;				console.log("11");				//console.log(context);				console.log("222");				//console.log(context.monitorType);				console.log("333");			var monitorTypes = [];						var monitorData = [];			for(i in context){				var results = {};				//console.log(context[i].monitorType);				monitorTypes.push(context[i].monitorType);				results["monitorType"] = context[i].monitorType;				var returnItems = context[i].MonityTemplateReturnItems;				var itemsLabels = [];				for(j in returnItems){					//console.log(returnItems[j].sv_label);					itemsLabels.push(returnItems[j].sv_label);					results["itemsLabel"] = itemsLabels;					var option = $("<option value="+returnItems[j].sv_label+"></option>").html(returnItems[j].sv_label)					$("#marklisted").append(option);						}									console.log(results);				monitorData.push(results);			}			console.log(monitorData);			//console.log(monitorTypes);			console.log("------------------");						//去重复			var rec = [];			var resultData = [];			for(m in monitorData){				//console.log(monitorData[m]);				if(!rec[monitorData[m]["monitorType"]]){					rec[monitorData[m]["monitorType"]] = true;					resultData.push(monitorData[m]);					var option = $("<option value="+[monitorData[m]["monitorType"]]+"></option>").html([monitorData[m]["monitorType"]])					$("#Typelisted").append(option);					// var option = $("<option value="+itemsLabels+"></option>").html(itemsLabels)					// $("#marklist").append(option);				}							}														console.log(resultData);							});		//弹窗的拖动 ModalDrag.draggable("#topNofadddivedit");}Template.topNofedit.topNeditform = function(){	return Session.get("topNeditform");}